{
    "collab_server" : "",
    "contents" : "library(survival)\nlibrary(rms)\n#Load car package for outlier analysis\nrequire(car)\npharynx <- read.csv(\"C://Users//lenovo//Desktop//R Day//pharynx.csv\"\n                    , header=TRUE)\nhead(pharynx)\nsummary(pharynx)\n\n#Cox PH with COND, T_STAGE, and N_STAGE as our predictors and TX stratified\ncox.ph_1 <- coxph(Surv(x$TIME, x$STATUS)~x$COND + x$T_STAGE + x$N_STAGE + strata(x$TX), \n                  data = pharynx)\nsummary(cox.ph_1)\n\n#Cox PH with COND, T_STAGE, and N_STAGE as our predictors\ncox.ph_2 <- coxph(Surv(x$TIME, x$STATUS)~x$COND+ x$T_STAGE + x$N_STAGE, \n                  data = pharynx)\nsummary(cox.ph_2)\n\n#Create initial regression model\nREG <- lm(TIME ~ COND + T_STAGE, data = pharynx)\nplot(REG)\n\n#Outlier Tests\noutlierTest(REG)\nqqPlot(REG, main = \"QQ Plot\")\nleveragePlots(REG)\navPlots(REG)\n\nfit <- survreg(Surv(TIME, STATUS)~1, pharynx)\n#Cook's Distance\ncutoff <- 4/((nrow(REG)-length(fit$coefficients)-2))\nplot(REG, which=4, cook.levels=cutoff)\n\n#Influence plot (Click bubbles to identify numbers)\ninfluencePlot(REG, id.method=\"identify\", \n              main=\"Figure 1: Influence Plot\", \n              sub=\"Circle size is proportial to Cook's Distance\" )\n\n##Removes outlier\nx <- pharynx[which(pharynx$CASE != 159),]\nnrow(x)\n\n\n#Create initial regression model without outlier\nREG_1 <- lm(TIME ~ COND + T_STAGE, data = x)\nplot(REG_1)\n\n#Outlier Tests\noutlierTest(REG_1)\nqqPlot(REG_1, main = \"QQ Plot\")\nleveragePlots(REG_1)\navPlots(REG_1)\n\nfit1 <- survreg(Surv(TIME, STATUS)~1, pharynx)\n#Cook's Distance\ncutoff1 <- 4/((nrow(REG_1)-length(fit1$coefficients)-2))\nplot(REG_1, which=4, cook.levels=cutoff1)\n\n#Influence plot (Click bubbles to identify numbers)\ninfluencePlot(REG_1, id.method=\"identify\", \n              main=\"Figure 2: Influence Plot After Removal Of Outlier\", \n              sub=\"Circle size is proportial to Cook's Distance\")\n\n#Add survival object. status == 1 is dead\nx$SurvObj <- with(x, Surv(x$TIME, x$STATUS == 1))\n\n#Kaplan-Meier estimator. The \"log-log\" CI is preferred.\nkm.as.one <- survfit(SurvObj ~ 1, data = x, conf.type = \"log-log\")\n\n#Plot\nplot(km.as.one, conf = F, mark.time = F, xlab= \"TIME\", ylab= \"Survival probabilty\",\n     main=\"Figure 3: Survival Estimate\")\n\n#Cox PH with COND and T_STAGE as predictors and TX stratified\ncox.ph_3 <- coxph(Surv(x$TIME, x$STATUS)~x$COND + x$T_STAGE + strata(x$TX), data = x)\nsummary(cox.ph_3)\n\n#Cox PH with COND and T_STAGE as predictors\ncox.ph_4 <- coxph(Surv(x$TIME, x$STATUS)~x$COND+ x$T_STAGE, data = x)\nsummary(cox.ph_4)\n\n\nplot(survfit(formula = Surv(x$TIME, x$STATUS)~ x$COND + x$T_STAGE, \n             data = x, conf.type=\"none\"), \n     lty=0, xlab=\"Time\", ylab=\"Survival Probability\" )\n\ncox.ph_4.zph <- cox.zph(time.dep, transform = 'log')\ntime.dep.zph\nplot(time.dep.zph[1])\nabline (h=0, lty=2)\n",
    "created" : 1485135255910.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "3952740351",
    "id" : "E737DC03",
    "lastKnownWriteTime" : 1485135445,
    "last_content_update" : 1485135445443,
    "path" : "C:/Users/lenovo/Desktop/R Day Git/R_Day.R",
    "project_path" : "R_Day.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}